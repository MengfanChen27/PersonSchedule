name: Build Windows Executable

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # Allows manual trigger from GitHub UI

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write  # Explicitly grant write permission for releases
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
        
    - name: Build with PyInstaller
      run: |
        pyinstaller --name "Production Scheduler" --onefile --windowed --hidden-import pandas --hidden-import numpy PS_GUI3.py
        
    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Production Scheduler ${{ github.ref_name }}
        draft: false
        prerelease: false
        body: |
          Production Person Scheduler ${{ github.ref_name }}
          
          ### Features
          - Production scheduling optimization
          - Multiple machine support
          - Staff allocation
          - Shift planning
          
          ### Installation
          1. Download the executable
          2. Run it directly - no installation needed
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/Production Scheduler.exe
        asset_name: Production_Scheduler.exe
        asset_content_type: application/octet-stream
